



2 . IIFE : Immediately Invoked Function Expression là 1 hàm được gọi ngay lập tức
có tính private(riêng tư)

;(
    Function(){
        console.log('Now')
    }
)()


VD : const app = (function(){
    //privete
    const cars = []

    return {
        get(index){
            return cars(index)
        },
        add(car){
            car.push(car)
        },
        edit(index,car){
            car(index, car)
        },
        delete(index){
            car.sploce(index, 1)
        }
    }
}
)
----------------------------------------------------------------------





3 . Scope : là phạm vi

--các loại phạm vi :
    -Global - toàn cầu (toàn cục)
    -Code block - Khối mã:let , const ==> code viết trong {} đều là code block
    -Local scope - Hàm:var , function
--Khi gọi mỗi hàm luôn có 1 phạm vi mới được tạo
--Các hàm có thể truy cập các biến được khai báo trong phạm vi của nó và bên ngoài nó
--Cách thức 1 biến được truy cập
--Khi nào 1 biến bị xóa khỏi bộ nhớ
    -Biến toàn cầu? --> khi chương trình bị tắt
    -Biến trong code block & trong hàm? --> 
    -Biến trong hàm được tham chiếu bởi 1 hàm
-----------------------------------------------------------------------





4. Closure : Tính Bao đóng của hàm
-- Là một hàm có thể ghi nhớ nơi nó được tạo và truy cập được biến ở bên ngoài phạm vi
VD : 
function createCounter(){
    let counter = 0

    function increase(){
        return ++increase
    }
    return increase
}

const counter1 = createCounter()
--------------------------------------------------------------





5. strict Mode

"use strict"
---------------------------------------------






7. This trong Javascript

this sẽ trả về đối tượng đang thuộc về
this.firstName = 'Minh';
this.lastName = 'Thu';
const teacher = {
    firstName: 'Minh',
    lastName: 'Thao?',
    getFullName() {
        return `${this.firstName} ${this.lastName}`;
    }
}
console.log(teacher.getFullName()); --> Minh Thảo
const getTeacherName = teacher.getFullName;
console.log(getTeacherName()); --> Minh Thu

Cách 2:
const getTeacherName = teacher.getFullName.;


