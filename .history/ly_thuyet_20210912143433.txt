// Làm Việc với Array

var languages = [
    'Java',
    'PHP',
    'Python',
]

1.toString: chuyển kiểu dữ liệu Array sang chuỗi
VD:  languages.toString();
 ==> Kết quả : Java,PHP,Python


2.Join : chuyển kiểu dữ liệu Array 
 sang chuỗi nhưng thêm kiều kiện ngăn cách giữa 
 các phần tử là gì
 VD :  languages.join('--');
 ==> Kết quả : Java--PHP--Python


3.pop : Xóa đi phần tử cuối mảng Array và 
    trả về phần tử mới Xóa
VD : langguage.pop();
==> Kết quả : Python


4. push : Thêm 1 hoặc nhiều phần tử vào cuối mảng
    và trả về độ dài mới của mảng
VD : languages.push('Dart','Ruby')
==> Kết quả : 5


5.shift : Xóa đi phần tử đầu mảng Array và 
 trả về phần tử mới Xóa
VD : langguage.shift();
==> Kết quả : Java


6.unshift :Thêm 1 hoặc nhiều phần tử vào đầu mảng
    và trả về độ dài mới của mảng
VD : languages.unshift('Dart','Ruby')
==> Kết quả : 5


7.splice : xóa phần tử hoặc có thể thay thế
    phần tử đó bằng 1 phần tử khác bởi vị trí 
    index
VD : languages.splice(1 , 2 , 'Dark')
1 : Vị trí Index sẽ bắt đầu làm Việc
2 : Số phần tử sẽ xóa bắt đầu từ vị trí Index ban đầu
'Dark' : Phần tử muốn thêm vào vị trí Index
==> Kết quả : languages = [
    'Java',
    'Dark',
]


8.concat : nối 2 Array 
VD : languages.concat(langguages)


9. slice : cắt 1 Array
VD : langguages.slice(1,2) 
1: là số bắt đầu cắt
2: là cắt bao nhiêu phần tử




========32,33,34,35,36,37====================
============================================================
                        Hàm
32. Tạo hàm có thể đặt tên từ a->z A->Z 0->9 _ $
không được đặt số ở đầu

function showDialog(message) { 
    console.log(message)
}
gọi hàm : --> showDialog('I love you');


33. arguments : hàm được định nghĩa sẵn
VD :
function writeLog() {
    var myString = '';
    for (var pagram of arguments) {
        myString += `${pagram} - `
    }
    console.log(myString)
}
writeLog('Log 1, Log 2');
==> Tạo ra 1 biến pagram chạy hết số phần tử của
arguments và gán vào biến myString


34. Return : Trả về
VD: 
function cong(a, b) {
    return a + b;
}
var result = cong(2 , 8);
console.log(result);

======number để xác định là kiểu số, 
undefined để xác nhận biến đã được gán giá trị hay chưa (tránh nhập rỗng) , 
isNaN xác định tham số truyền vào là hợp lệ (tránh truyền vào sum(2/0 , 1))
==========
function sum(a,b) {
    if (typeof (a,b) =='number'
    && typeof (a,b) !='undefined'
    && !isNaN(a,b)
    ) {
        return a+b;
    }
    else{
        return false;
    }
    }
Number.isFinite()	Xác định xem giá trị đã cho có phải là số hữu hạn hay không. Trả về boolean
Number.isInteger()	Xác định xem giá trị đã cho có phải là số nguyên hay không. Trả về boolean
Number.parseFloat()	Chuyển đổi chuỗi đã cho thành một số dấu phẩy động
Number.parseInt()	Chuyển đổi chuỗi đã cho thành một số nguyên
Number.prototype.toFixed()	Chuyển đổi và trả về chuỗi đại diện cho số đã cho, có số chữ số chính xác sau dấu thập phân
Number.prototype.toString()	Chuyển đổi và trả về số đã cho dưới dạng chuỗi

=== Diện Tích Tam Giac=====
function calculateTriangleArea(a,h) {
    if ((a,h) != undefined && Number.isInteger(a,h) 
    && (a,h) >0 && !isNaN(a,h)) {
        var triangleAcreage = 1/2*a*h;
        return triangleAcreage;
    }
    else{
        return false;
    }
}






===============================================
===========38 , 39, 40 ,41 , 42 ,==========
============ 43 , 44, ===============================
38.Object 

var emailKey = 'email';

var myInfo = {
    name: '',
    age: '',
    [emailKey] = 'aaaaa@gmail.com';
};

-----Thêm 1 key và value vào object đã Tạo
cách 1 : myInfo.email = 'dung.nguyenanh@ggg.com.vn';
cách 2 : myInfo.['myemail'] = 'dung.nguyenanh@ggg.com.vn';

----- Cách lấy ra giá trị trong object
cách 1 : myInfo.name
cách 2 : myInfo.['name']

----- Xóa đi 1 key trong object 
cách 1 : delete myInfo.name

Function --> Phương thức / method
VD : getAge: function() {
    
}

others --> thuộc tính / property
VD : phone: '0102030405',
--------------------------------



39. Object constructor
VD : 
function User(firstName, lastName, avatar) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.avatar = avatar;
    this.getName = function(){
        return `${this.firstName} ${lastName}`
    }
}

var author = new User('Dũng', 'Nguyễn', 'Avatar')
var user = new User('Anh', 'Nguyễn', 'Avatar')

-- Thêm 1 key mới cho từng đối tượng riêng
author.title = 'chia sẻ khóa học'
user.comment = 'ok baby'
----------------------------------------


40. Object prototype
VD :
User.prototype.className ='F8'
-----------------------------------------------------



41. Date 
cách 1 : var date = new Date(); -->typeof là object
cách 2 : var date = Date(); -->typeof là string

lấy năm : var year = date.getFullYear();
lấy tháng : var month = date.getMonth() + 1;
lấy năm : var day = date.getDate();
lấy giờ : var house = date.getHouse();
lấy phút : var minutes = date.getMinutes();
lấy giây : var seconds = date.getSeconds();
------------------------------------------------------



42. Lệnh rẽ nhánh if else 
chỉ cần 1 nhánh đúng là câu lệnh sẽ dừng
if (){

}else if(){

}
----------------------------------------------



43. switch 
VD :
var date = 2;

switch(date) {
    case 2: --> nó sẽ lấy date so sánh với 2 (date === 2)
        console.log('hôm nay là thứ 2');
        break;
    case 3:
        console.log('hôm nay là thứ 3');
        break;
    case 4:
        console.log('hôm nay là thứ 4');
        break;
    default:
        console.log('Không biết');
}

hoặc 

switch(date) {
    case 2:
    case 3:
        console.log('hôm nay là thứ 2, 3');
        break;
    case 4:
        console.log('hôm nay là thứ 4');
        break;
    default:
    console.log('Không biết');   
}
------------------------------------------------------



44. Toán tử 3 Ngôi

var course = {
    name: ''
}